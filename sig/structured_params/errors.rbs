# Generated from lib/structured_params/errors.rb with RBS::Inline

module StructuredParams
  # Custom errors collection that handles nested attribute names
  # rubocop:disable Style/OptionalBooleanParameter
  class Errors < ActiveModel::Errors
    # Override to_hash to maintain compatibility with ActiveModel::Errors by default
    # Add nested option to get nested structure for dot-notation attributes
    # : (?bool, ?nested: bool) -> Hash[String, Array[String]]
    def to_hash: (?bool, ?nested: bool) -> Hash[String, Array[String]]

    # Get error messages with custom key transformation
    # Users can provide a block to transform attribute keys
    #
    # Examples:
    #   errors.messages_with { |attr| "/#{attr.gsub('.', '/')}" }  # JSON Pointer
    #   errors.messages_with { |attr| attr.upcase }               # Uppercase keys
    #   errors.messages_with(true) { |attr| "custom_#{attr}" }    # With full messages
    #
    # : (?bool) { (String) -> String } -> Hash[String, Array[String]]
    def messages_with: (?bool) { (String) -> String } -> Hash[String, Array[String]]

    private

    # Build a nested hash structure from flat dot-notation keys
    # Converts "address.postal_code" to {address: {postal_code: value}}
    # : (Hash[untyped, untyped], Hash[Symbol, untyped], ?String) -> Hash[String, String]
    def build_nested_hash: (Hash[untyped, untyped], Hash[Symbol, untyped], ?String) -> Hash[String, String]
  end
end
