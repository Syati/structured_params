name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  update-version-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract version from tag
      id: extract_version
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        VERSION=${TAG_NAME#v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

    - name: Update version file
      run: |
        VERSION="${{ steps.extract_version.outputs.version }}"
        sed -i "s/VERSION = '[^']*'/VERSION = '$VERSION'/" lib/structured_params/version.rb

    - name: Extract release notes from GitHub release
      id: release_notes
      run: |
        RELEASE_NOTES=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ steps.extract_version.outputs.tag_name }}" \
          | jq -r '.body // ""')
        
        # Escape newlines and quotes for use in sed
        RELEASE_NOTES=$(echo "$RELEASE_NOTES" | sed 's/$/\\n/' | tr -d '\n' | sed 's/\\n$//' | sed 's/"/\\"/g')
        echo "release_notes=$RELEASE_NOTES" >> $GITHUB_OUTPUT

    - name: Update CHANGELOG
      run: |
        VERSION="${{ steps.extract_version.outputs.version }}"
        CURRENT_DATE=$(date +%Y-%m-%d)
        RELEASE_NOTES="${{ steps.release_notes.outputs.release_notes }}"
        
        # Create temporary changelog entry
        echo "## [$VERSION] - $CURRENT_DATE" > temp_changelog.md
        echo "" >> temp_changelog.md
        if [ -n "$RELEASE_NOTES" ]; then
          echo -e "$RELEASE_NOTES" >> temp_changelog.md
        else
          echo "- Release $VERSION" >> temp_changelog.md
        fi
        echo "" >> temp_changelog.md
        
        # Prepend to existing CHANGELOG (skip the header)
        if [ -f CHANGELOG.md ]; then
          tail -n +3 CHANGELOG.md >> temp_changelog.md
        fi
        
        # Add header back
        echo "# Changelog" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        cat temp_changelog.md >> CHANGELOG.md
        rm temp_changelog.md

    - name: Commit version and CHANGELOG updates
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add lib/structured_params/version.rb CHANGELOG.md
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Release ${{ steps.extract_version.outputs.tag_name }}: Update version and CHANGELOG"
          git push origin main
        fi

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4'
        bundler-cache: true

    - name: Build gem
      run: |
        gem build structured_params.gemspec

    - name: Publish to RubyGems
      run: |
        mkdir -p ~/.gem
        echo ":rubygems_api_key: ${{ secrets.RUBYGEMS_API_KEY }}" > ~/.gem/credentials
        chmod 0600 ~/.gem/credentials
        gem push structured_params-*.gem
      env:
        RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
