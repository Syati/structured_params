name: Release

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4'
        bundler-cache: true

    - name: Extract version from tag
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Validate version consistency
      run: |
        GEMSPEC_VERSION=$(ruby -r "./lib/structured_params/version" -e "puts StructuredParams::VERSION")
        if [ "$GEMSPEC_VERSION" != "${{ steps.version.outputs.version }}" ]; then
          echo "Version mismatch: tag ${{ steps.version.outputs.version }} vs gemspec $GEMSPEC_VERSION"
          exit 1
        fi

    - name: Build gem
      run: gem build structured_params.gemspec

    - name: Publish to RubyGems
      run: |
        mkdir -p $HOME/.gem
        touch $HOME/.gem/credentials
        chmod 0600 $HOME/.gem/credentials
        printf -- "---\n:rubygems_api_key: ${GEM_HOST_API_KEY}\n" > $HOME/.gem/credentials
        gem push *.gem
      env:
        GEM_HOST_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}

    - name: Update CHANGELOG
      run: |
        # Extract release notes from GitHub release
        RELEASE_NOTES=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ steps.version.outputs.tag_name }}" \
          | jq -r '.body // ""')
        
        # Get current date
        CURRENT_DATE=$(date +%Y-%m-%d)
        
        # Create temporary file with new changelog entry
        cat > temp_changelog.md << EOF
# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [${{ steps.version.outputs.version }}] - $CURRENT_DATE

$RELEASE_NOTES

EOF
        
        # Append existing changelog content (skip the header)
        tail -n +9 CHANGELOG.md >> temp_changelog.md
        mv temp_changelog.md CHANGELOG.md

    - name: Commit and push CHANGELOG update
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add CHANGELOG.md
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update CHANGELOG for v${{ steps.version.outputs.version }}"
          git push origin main
        fi
